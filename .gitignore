# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

# database files
data.db
data.db-shm
data.db-wal

# mcps
.mcp.json

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Cursor IDE (but keep project rules)
.cursor/
!.cursor/rules/
!.cursor/rules/project-rules.md

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*
dev.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# ESLint cache
.eslintcache

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js revalidation and cache
.next/revalidate

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Database backups and exports
*.sql.backup
*.db.backup
database-export/

# Local environment configuration
.env
.env.local
.env.development
.env.test
.env.production
.env.staging

# Supabase
.supabase/

# Deployment artifacts
.vercel/
.netlify/
.firebase/

# Generated types
types/generated/
src/types/generated/

# Build artifacts
dist/
build/
out/

# Documentation builds
docs/.vuepress/dist/
docs/_book/

# Testing artifacts
__tests__/__fixtures__/
test-results/
playwright-report/
test-output/

# Package manager locks (choose one)
# package-lock.json  # uncomment if using yarn
# yarn.lock         # uncomment if using npm
# pnpm-lock.yaml    # uncomment if using yarn/npm

# Backup files
*.backup
*.bak
*.tmp

# Application specific
uploads/
media/
static/uploads/

# Analytics and monitoring
.lighthouseci/
